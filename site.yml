---
- name: Estuary postgres loadbalancer nodes
  hosts: loadbalancer
  become: true # Not needed for root but we won't use root later
  remote_user: root

  vars:
    corosync_expected_votes: "{{ ( groups[pacemaker_cluster_group]|count /2 ) | round (0, 'ceil') | int }}"
    corosync_bindnet_interface: 'eth0'
    pacemaker_cluster_group: 'loadbalancer'
    pacemaker_cluster_constraints:
      - constraint: 'colocation'
        action: 'add'
        source_resource_id: 'loadbalancer'
        target_resource_id: 'virtual_ip'
        score: 'INFINITY'
      - constraint: 'order'
        order:
          first_resource: 'virtual_ip'
          first_resource_action: 'start'
          second_resource: 'loadbalancer'
          second_resource_action: 'start'
    pacemaker_cluster_resources:
      - resource_id: 'virtual_ip'
        action: 'create'
        provider: 'ocf:heartbeat:IPaddr2'
        options:
          - 'ip=10.1.3.1'
          - 'cidr_netmask=16'
        op: 'monitor'
        op_options:
          - 'interval=30s'
      - resource_id: 'loadbalancer'
        action: 'create'
        provider: 'lsb:haproxy'
        op: 'monitor'
        op_options:
          - 'timeout=5s'
          - 'interval=5s'
    pacemaker_cluster_settings:
      - property: 'start-failure-is-fatal'
        value: 'false'
      - property: 'pe-warn-series-max'
        value: 1000
      - property: 'pe-input-series-max'
        value: 1000
      - property: 'pe-error-series-max'
        value: 1000
      - property: 'cluster-recheck-interval'
        value: 5min
  roles:
    - haproxy
    - zorlin.pacemaker

- name: Estuary postgres etcd nodes
  hosts: etcd
  become: true # Not needed for root but we won't use root later
  remote_user: root

  roles:
    - role: andrewrothstein.etcd-cluster
      etcd_secure: true

  vars:
    etcd_cluster_name: postgresql

- name: Estuary postgres postgres nodes
  hosts: postgresql
  become: true # Not needed for root but we won't use root later
  remote_user: root

  vars:
    patroni_install_haproxy: false
    patroni_install_watchdog_loader: false
    patroni_postgresql_version: 14
    patroni_etcd_hosts: "{% for host in groups['postgresql'] %}{{ hostvars[host]['ansible_eth0']['ipv4']['address'] }}:2379{% if not loop.last %},{% endif %}{% endfor %}"
    patroni_etcd_protocol: https
    patroni_etcd_cacert: "/var/lib/patroni.pki/ca.pem"
    patroni_etcd_cert: "/var/lib/patroni.pki/{{ inventory_hostname }}.pem"
    patroni_etcd_key: "/var/lib/patroni.pki/{{ inventory_hostname }}-key.pem"
    patroni_postgresql_pg_hba:
      - { type: "local", database: "all", user: "all", method: "peer" }
      - { type: "host", database: "all", user: "postgres", address: "10.1.3.0/24", method: "md5" }
      - { type: "host", database: "all", user: "all", address: "10.1.3.0/24", method: "ident", options: "map=omicron" }
      - { type: "host", database: "replication", user: "{{ patroni_replication_username }}", address: "10.1.3.0/24", method: "md5" }


  roles:
    - patroni_certs
    - role: zorlin.patroni
